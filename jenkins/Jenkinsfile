// declarative pipeline
pipeline {
    agent any
    environment {
        JENKINS_JSON_CONFIG = "${params.JSONConfig}"
        JENKINS_JSON_CREDS = credentials("${params.JSONCreds}")
    }
    stages {
        stage('Prepare workspace') {
            steps {
                cleanWs()
                git branch: 'main', url: 'http://github.com/token47/sunbeam-ci.git'
                sh "ls -la"
                echo "Credential being used in this build: ${params.JSONCreds}"
                echo "Config being used in this build: ${params.JSONConfig}"
            }
        }
        stage('Prepare substrate') {
            steps {
                sh "./src/manage_substrate.py build"
            }
        }
        stage('Deploy Sunbeam') {
            steps {
                sh "./src/deploy_sunbeam.py"
            }
            post {
                failure {
                    script {
                        if (params.PauseBuild) {
                            input message:"Paused. Continue?"
                        }
                    }
                }
            }
        }
        stage('Test Sunbeam') {
            steps {
                catchError(stageResult: 'UNSTABLE', buildResult: 'UNSTABLE') {
                    sh "./src/test_sunbeam.py"
                }
            }
            post {
                always {
                    script {
                        if (params.PauseBuild) {
                            input message:"Paused. Continue?"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            sh "./src/collect_artifacts.py || :"
            sh "./src/build_description.py -j ${JOB_NAME} -b ${BUILD_NUMBER} || :"
            dir('artifacts') {
                archiveArtifacts artifacts: '**/*', allowEmptyArchive: true
                script {
                    currentBuild.setDescription(readFile("build-description.txt"))
                }
            }
            // adds console output to the artifacts so we also get it when downloading zip file
            sh "bash -c 'ln ../../jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/{log,archive/console-output.log} || :'"
            sh "./src/manage_substrate.py destroy"
        }
    }
}
